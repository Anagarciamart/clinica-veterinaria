import streamlit as st
import requests
from datetime import datetime

# URL del microservicio FastAPI
url = "http://fastapi:8000/envio/"

# T√≠tulo principal de la app
st.title("Ejemplo: formulario para dar la entrada de datos üñ•Ô∏èüñ•")

# Usamos st.session_state para mantener el estado entre las p√°ginas
if 'page' not in st.session_state:
    st.session_state.page = 'inicio'

# P√°gina de inicio
if st.session_state.page == 'inicio':
    st.subheader("Selecciona una opci√≥n para continuar:")

    # Selecci√≥n de la opci√≥n principal
    option = st.selectbox("Opci√≥n",
                          ["Registrar Due√±o", "Registrar mascota", "Buscar Due√±o/Mascota", "Eliminar Due√±o/Mascota"])

    # Bot√≥n para enviar y redirigir a la p√°gina correspondiente
    if st.button('Enviar'):
        # Cambiar el estado de la p√°gina seg√∫n la opci√≥n elegida
        if option == "Registrar Due√±o":
            st.session_state.page = 'registrar_due√±o'
        elif option == "Registrar mascota":
            st.session_state.page = 'registrar_mascota'
        elif option == "Buscar Due√±o/Mascota":
            st.session_state.page = 'buscar_due√±o_mascota'
        elif option == "Eliminar Due√±o/Mascota":
            st.session_state.page = 'eliminar_due√±o_mascota'

# P√°gina para registrar due√±o
elif st.session_state.page == 'registrar_due√±o':
    st.subheader("Registrar Due√±o")

    # Formulario para registrar un due√±o
    with st.form("form_due√±o"):
        name = st.text_input("Nombre del Due√±o")
        dni = st.text_input("DNI del Due√±o")
        address = st.text_input("Direcci√≥n del Due√±o")
        email = st.text_input("Correo Electr√≥nico del Due√±o")
        phone = st.text_input("Tel√©fono del Due√±o")
        submit_button = st.form_submit_button(label="Registrar Due√±o")

    if submit_button:
        # Aqu√≠ puedes enviar los datos a tu microservicio o almacenarlos
        payload = {
            "option": "Registrar Due√±o",
            "name": name,
            "dni": dni,
            "address": address,
            "email": email,
            "phone": phone
        }
        response = requests.post(url, json=payload)

        if response.status_code == 200:
            st.success("Due√±o registrado correctamente")
        else:
            st.error("Error al registrar el due√±o")

    # Bot√≥n para volver a la p√°gina principal
    if st.button('Volver'):
        st.session_state.page = 'inicio'

# P√°gina para registrar mascota
elif st.session_state.page == 'registrar_mascota':
    st.subheader("Registrar Mascota")

    # Formulario para registrar una mascota
    with st.form("form_mascota"):
        pet_name = st.text_input("Nombre de la Mascota")
        pet_type = st.selectbox("Tipo de Mascota", ["Perro", "Gato", "Otro"])
        breed = st.text_input("Raza de la Mascota")
        birthdate = st.date_input("Fecha de Nacimiento de la Mascota")
        medical_conditions = st.text_area("Patolog√≠as Previas de la Mascota")

        # Elegir si el due√±o es nuevo o ya existente
        owner_option = st.radio("¬øEs el due√±o de la mascota un nuevo due√±o o uno existente?",
                                ["Nuevo Due√±o", "Due√±o Existente"])

        if owner_option == "Nuevo Due√±o":
            # Si es nuevo due√±o, mostrar los campos del due√±o
            new_owner_name = st.text_input("Nombre del Nuevo Due√±o")
            new_owner_dni = st.text_input("DNI del Nuevo Due√±o")
            new_owner_address = st.text_input("Direcci√≥n del Nuevo Due√±o")
            new_owner_email = st.text_input("Correo Electr√≥nico del Nuevo Due√±o")
            new_owner_phone = st.text_input("Tel√©fono del Nuevo Due√±o")
            submit_button = st.form_submit_button(label="Registrar Mascota y Due√±o")

            if submit_button:
                # Aqu√≠ puedes enviar los datos al microservicio para registrar el nuevo due√±o y la mascota
                payload = {
                    "option": "Registrar Mascota",
                    "pet_name": pet_name,
                    "pet_type": pet_type,
                    "breed": breed,
                    "birthdate": birthdate.strftime("%Y-%m-%d"),
                    "medical_conditions": medical_conditions,
                    "owner": {
                        "name": new_owner_name,
                        "dni": new_owner_dni,
                        "address": new_owner_address,
                        "email": new_owner_email,
                        "phone": new_owner_phone
                    }
                }
        else:
            # Si es due√±o existente, permitir seleccionar un due√±o de la base de datos
            owner_id = st.text_input("ID del Due√±o Existente")
            submit_button = st.form_submit_button(label="Registrar Mascota")

            if submit_button:
                # Aqu√≠ puedes hacer la b√∫squeda del due√±o existente por ID y registrar la mascota
                payload = {
                    "option": "Registrar Mascota",
                    "pet_name": pet_name,
                    "pet_type": pet_type,
                    "breed": breed,
                    "birthdate": birthdate.strftime("%Y-%m-%d"),
                    "medical_conditions": medical_conditions,
                    "owner_id": owner_id
                }

        response = requests.post(url, json=payload)

        if response.status_code == 200:
            st.success("Mascota registrada correctamente")
        else:
            st.error("Error al registrar la mascota")

    # Bot√≥n para volver a la p√°gina principal
    if st.button('Volver'):
        st.session_state.page = 'inicio'

# P√°gina para buscar due√±o o mascota
elif st.session_state.page == 'buscar_due√±o_mascota':
    st.subheader("Buscar Due√±o/Mascota")

    # Formulario para realizar la b√∫squeda
    with st.form("form_buscar"):
        search_query = st.text_input("Buscar por Nombre o ID")
        submit_button = st.form_submit_button(label="Buscar")

    if submit_button:
        # Aqu√≠ puedes hacer la solicitud para buscar due√±o o mascota
        payload = {"option": "Buscar Due√±o/Mascota", "search_query": search_query}
        response = requests.post(url, json=payload)

        if response.status_code == 200:
            st.success("Resultado de la b√∫squeda:")
            st.json(response.json())
        else:
            st.error("Error al realizar la b√∫squeda")

    # Bot√≥n para volver a la p√°gina principal
    if st.button('Volver'):
        st.session_state.page = 'inicio'

# P√°gina para eliminar due√±o o mascota
elif st.session_state.page == 'eliminar_due√±o_mascota':
    st.subheader("Eliminar Due√±o/Mascota")

    # Formulario para eliminar due√±o o mascota
    with st.form("form_eliminar"):
        delete_id = st.text_input("ID del Due√±o o Mascota a Eliminar")
        submit_button = st.form_submit_button(label="Eliminar")

    if submit_button:
        # Aqu√≠ puedes hacer la solicitud para eliminar due√±o o mascota
        payload = {"option": "Eliminar Due√±o/Mascota", "delete_id": delete_id}
        response = requests.post(url, json=payload)

        if response.status_code == 200:
            st.success("Due√±o o Mascota eliminados correctamente")
        else:
            st.error("Error al eliminar el due√±o o mascota")

    # Bot√≥n para volver a la p√°gina principal
    if st.button('Volver'):
        st.session_state.page = 'inicio'
